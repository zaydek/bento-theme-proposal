@use "sass:list";
@use "sass:map";

// @mixin theme($theme-map-partials...) {
// 	$theme-map: ();
// 	@each $m in $theme-map-partials {
// 		$theme-map: map-merge($theme-map, $m);
// 	}
//
// 	$themes: ();
// 	@each $k1, $v1 in $theme-map {
// 		@each $k2, $v2 in $v1 {
// 			@each $k3, $v3 in $v2 {
// 				@if $k3 != "light" and not index($themes, $k3) {
// 					$themes: join($themes, $k3);
// 				}
// 			}
// 		}
// 	}
//
// 	@at-root {
// 		html {
// 			@each $k1, $v1 in $theme-map {
// 				@each $k2, $v2 in $v1 {
// 					$got: #{map.get($v2, "light")};
// 					@if $got {
// 						#{$k1}-#{$k2}: #{$got};
// 					}
// 				}
// 			}
// 		}
// 		@each $theme in $themes {
// 			[data-theme="#{$theme}"] {
// 				@each $k1, $v1 in $theme-map {
// 					@each $k2, $v2 in $v1 {
// 						$got: #{map.get($v2, $theme)};
// 						@if $got {
// 							#{$k1}-#{$k2}: #{$got};
// 						}
// 					}
// 				}
// 			}
// 		}
// 		@each $k1, $v1 in $theme-map {
// 			$amp: if(not & or "" + & == ":root" or "" + & == "html" or "" + & == "body", ".", & + "-");
// 			#{$amp}#{str-slice($k1, str-length("--") + 1)} {
// 				@each $k2, $v2 in $v1 {
// 					#{$k2}: var(#{$k1}-#{$k2});
// 				}
// 				@content;
// 			}
// 		}
// 	}
// }

// $separator: ":";
//
// @function get-dynamic-ampersand() {
// 	@if not & {
// 		@return ".";
// 	}
// 	@return & + $separator;
// }

// $transition: list.append($transition, ($duration map.get($v1, "property") $timing-function), comma);
@mixin theme($theme-map, $duration: null, $timing-function: null) {
	// TODO: Sort?
	$properties: ();
	@if $duration != null and $timing-function != null {
		@each $k1, $v1 in $theme-map {
			@if not list.index($properties, map.get($v1, "property")) {
				$properties: list.append($properties, map.get($v1, "property"));
			}
		}
	}

	$transition: ();
	@each $v in $properties {
		$transition: list.append($transition, $duration $v $timing-function, comma);
	}

	$themes: ();
	@each $k1, $v1 in $theme-map {
		@each $k2, $v2 in $v1 {
			// Step over `property` and `light`:
			@if $k2 != "property" and $k2 != "light" and not index($themes, $k2) {
				$themes: join($themes, $k2);
			}
		}
	}

	@at-root {
		& {
			@each $k1, $v1 in $theme-map {
				$got: #{map.get($v1, "light")};
				@if $got {
					#{$k1}: #{$got};
				}
			}

			@if $duration != null and $timing-function != null {
				--theme-transition: #{$transition};
			}
		}
		@each $theme in $themes {
			[data-theme="#{$theme}"] {
				@each $k1, $v1 in $theme-map {
					$got: #{map.get($v1, $theme)};
					@if $got {
						#{$k1}: #{$got};
					}
				}
			}
		}
		@each $k1, $v1 in $theme-map {
			.theme\:#{str-slice($k1, str-length("--") + 1)} {
				#{map.get($v1, "property")}: var(#{$k1});
				@if $duration != null and $timing-function != null {
					transition: var(--theme-transition);
				}
			}
		}
	}
}

// @if $duration != null and $timing-function != null {
// 	// transition: var(--theme-transition);
// 	transition: #{$duration} #{map.get($v1, "property")} #{$timing-function};
// }
